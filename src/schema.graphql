type Query {
  currentUser: User!
}

type Mutation {
  register(username: String!, password: String!): User!
  login(username: String!, password: String!): LoginResponse!
}

#========== User ==========#
type User {
  id: ID!
  username: String!
  password: String!
  permission: Permission!
  registDate: DateTime!
  todos: [Todo!]!
}

type LoginResponse {
  token: String
  user: User
}

#========== Todo ==========#
type Todo {
  id: ID!
  content: String!
  user: User!
  createdAt: DateTime!
  updatedAt: DateTime
}

#========== Other ==========#
scalar DateTime

enum Permission {
  ADMIN
  DEFAULT_USER
  PREMIUM_USER
}
